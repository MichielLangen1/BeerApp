// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using back_end.Data;

namespace backend.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20181127121655_UpdateModels")]
    partial class UpdateModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("back_end.Models.Beer", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BrandID");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<double>("Percentage");

                    b.HasKey("ID");

                    b.HasIndex("BrandID");

                    b.ToTable("Beer");
                });

            modelBuilder.Entity("back_end.Models.Brand", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("back_end.Models.Ingredient", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BeerID");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.HasIndex("BeerID");

                    b.ToTable("Ingredient");
                });

            modelBuilder.Entity("back_end.Models.User", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("password");

                    b.HasKey("ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("back_end.Models.UserBeer", b =>
                {
                    b.Property<string>("UserID");

                    b.Property<string>("BeerId");

                    b.HasKey("UserID", "BeerId");

                    b.HasIndex("BeerId");

                    b.ToTable("UserBeer");
                });

            modelBuilder.Entity("back_end.Models.Beer", b =>
                {
                    b.HasOne("back_end.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandID");
                });

            modelBuilder.Entity("back_end.Models.Ingredient", b =>
                {
                    b.HasOne("back_end.Models.Beer")
                        .WithMany("Ingredients")
                        .HasForeignKey("BeerID");
                });

            modelBuilder.Entity("back_end.Models.UserBeer", b =>
                {
                    b.HasOne("back_end.Models.Beer", "Beer")
                        .WithMany("UserBeers")
                        .HasForeignKey("BeerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("back_end.Models.User", "User")
                        .WithMany("UserBeers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
